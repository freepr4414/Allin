package tables

import (
	"database/sql"
	"fmt"
	"log"
)

// CreateManagerAccessTable 좌석 관리 테이블 및 인덱스를 생성합니다.
// 함수 이름을 대문자로 시작하여 외부에서 접근 가능하게 만듭니다.
// 매니저 접속 로그 테이블
func CreateManagerAccessTable(db *sql.DB) error {
	log.Println("manager_access_table 테이블을 생성합니다...")

	// 테이블 생성
	createBaseTableQuery := `CREATE TABLE IF NOT EXISTS manager_access_table();`

	_, err := db.Exec(createBaseTableQuery)
	if err != nil {
		return err
	}
	log.Println("manager_access_table 테이블 기본 구조 생성 완료")

	tableName := "manager_access_table"
	alterPrefix := fmt.Sprintf("ALTER TABLE %s ADD COLUMN IF NOT EXISTS ", tableName)

	// 각 필드 개별 추가
	fieldDefinitions := []string{
		// 기본키
		"serial_number BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY",
		// 매니저 아이디
		"manager_id TEXT NOT NULL REFERENCES manager_table(manager_id)",
		// 로그 구분(로그인=1, 로그아웃=2)
		"log_type SMALLINT NOT NULL",
		// 로그 시간
		"log_time TIMESTAMP DEFAULT CURRENT_TIMESTAMP",
		// IP 주소
		"ip_address TEXT",
		// 사용자 에이전트
		"user_agent TEXT",
		// 기기 정보
		"device_info JSONB",
		// 위치 정보
		"location_info JSONB",
	}

	// device_info: 기기 상세 정보 (JSON)
	//  {
	//    "os": "Windows 10",
	//    "browser": "Chrome",
	//    "device_type": "desktop",
	//    "screen_resolution": "1920x1080"
	//  }

	// location_info: 위치 정보 (JSON)
	//  {
	//    "country": "KR",
	//    "city": "Seoul",
	//    "latitude": 37.5665,
	//    "longitude": 126.9780
	//  }

	// 각 필드 추가 쿼리 생성
	fieldQueries := make([]string, len(fieldDefinitions))
	for i, field := range fieldDefinitions {
		fieldQueries[i] = alterPrefix + field + ";"
	}

	// 각 필드 추가 실행 및 진행 상황 로깅
	for i, query := range fieldQueries {
		_, err = db.Exec(query)
		if err != nil {
			return err
		}
		// if (i+1)%5 == 0 || i == len(fieldQueries)-1 {
		log.Printf("manager_access_table 필드 추가 진행 중: %d/%d 완료", i+1, len(fieldQueries))
		// }
	}

	// 인덱스 생성 쿼리 목록
	indexQueries := []string{
		`CREATE INDEX IF NOT EXISTS idx_business_name ON manager_access_table (business_name);`,
		`CREATE INDEX IF NOT EXISTS idx_business_number ON manager_access_table (business_number);`,
		`CREATE INDEX IF NOT EXISTS idx_representative_name ON manager_access_table (representative_name);`,
	}

	// 인덱스 생성 실행
	for _, query := range indexQueries {
		_, err = db.Exec(query)
		if err != nil {
			return err
		}
	}

	log.Println("manager_access_table 테이블과 인덱스가 성공적으로 생성되었습니다.")
	return nil
}
