package tables

import (
	"database/sql"
	"fmt"
	"log"
)

// CreateRoomTable 좌석 관리 테이블 및 인덱스를 생성합니다.
// 함수 이름을 대문자로 시작하여 외부에서 접근 가능하게 만듭니다.
// 열람실 정보 테이블
func CreateRoomTable(db *sql.DB) error {
	log.Println("room_table 테이블을 생성합니다...")

	// 테이블 생성
	createBaseTableQuery := `CREATE TABLE IF NOT EXISTS room_table ();`

	_, err := db.Exec(createBaseTableQuery)
	if err != nil {
		return err
	}
	log.Println("room_table 테이블 기본 구조 생성 완료")

	tableName := "room_table"
	alterPrefix := fmt.Sprintf("ALTER TABLE %s ADD COLUMN IF NOT EXISTS ", tableName)

	// 각 필드 개별 추가
	fieldDefinitions := []string{
		// 기본키
		"serial_number BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY",
		// 체인코드
		"chain_code SMALLINT",
		// 회사코드
		"comapny_code SMALLINT",
		// 열람실코드
		"room_code SMALLINT",
		// 열람실 타이틀
		"room_title TEXT",
		// 타이틀 배경색
		"title_background_color TEXT",
		// 타이틀 텍스트색
		"title_text_color TEXT",
		// 열람실 배경색
		"room_background_color TEXT",
		// 열람실 위치
		"room_top INTEGER",
		// 열람실 위치
		"room_left INTEGER",
		// 열람실 너비
		"room_width INTEGER",
		// 열람실 높이
		"room_height INTEGER",
		// 성별
		"gender SMALLINT",
		// 대기석
		"waiting SMALLINT",
		// 타이틀숨김
		"hide_title SMALLINT",
		// 배경 투명
		"transparent_background SMALLINT",
		// 테두리 숨김
		"hide_border SMALLINT",
		// 키오스트 비활성화
		"kiosk_disabled SMALLINT",
		// 전원 제어
		"power_control SMALLINT",
		// 차단기 번호
		"breaker_number INTEGER",
	}

	// 각 필드 추가 쿼리 생성
	fieldQueries := make([]string, len(fieldDefinitions))
	for i, field := range fieldDefinitions {
		fieldQueries[i] = alterPrefix + field + ";"
	}

	// 각 필드 추가 실행 및 진행 상황 로깅
	for i, query := range fieldQueries {
		_, err = db.Exec(query)
		if err != nil {
			return err
		}
		// if (i+1)%5 == 0 || i == len(fieldQueries)-1 {
		log.Printf("room_table 필드 추가 진행 중: %d/%d 완료", i+1, len(fieldQueries))
		// }
	}

	// 인덱스 생성 쿼리 목록
	indexQueries := []string{
		`CREATE INDEX IF NOT EXISTS idx_chain_code ON room_table (chain_code);`,
		`CREATE INDEX IF NOT EXISTS idx_comapny_code ON room_table (comapny_code);`,
		`CREATE INDEX IF NOT EXISTS idx_room_code ON room_table (room_code);`,
	}

	// 인덱스 생성 실행
	for _, query := range indexQueries {
		_, err = db.Exec(query)
		if err != nil {
			return err
		}
	}

	log.Println("room_table 테이블과 인덱스가 성공적으로 생성되었습니다.")
	return nil
}
